{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Ingredient } from \"src/shared/ingredient.model\";\nexport class ShoppingListService {\n  constructor() {\n    this.ingredientsChanged = new EventEmitter();\n    this.ingredients = [new Ingredient('Apples', 5), new Ingredient('Bananas', 3)];\n  }\n  getIngredients() {\n    // we return copy of array \n    return this.ingredients.slice();\n  }\n  addIngredient(ingredient) {\n    this.ingredients.push(ingredient);\n    //we have to emitt event that data is changed \n    this.ingredientsChanged.emit(this.ingredients.slice());\n  }\n  addIngredients(ingredients) {\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.emit(this.ingredients.slice());\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,UAAU,QAAQ,6BAA6B;AAExD,OAAM,MAAOC,mBAAmB;EAAhCC;IACI,uBAAkB,GAAG,IAAIH,YAAY,EAAgB;IAC7C,gBAAW,GAAiB,CAChC,IAAIC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,EAC3B,IAAIA,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAC7B;EAkBP;EAhBIG,cAAc;IACV;IACA,OAAO,IAAI,CAACC,WAAW,CAACC,KAAK,EAAE;EACnC;EAEAC,aAAa,CAACC,UAAsB;IAChC,IAAI,CAACH,WAAW,CAACI,IAAI,CAACD,UAAU,CAAC;IACjC;IACA,IAAI,CAACE,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACN,WAAW,CAACC,KAAK,EAAE,CAAC;EAC1D;EAEAM,cAAc,CAACP,WAAyB;IACpC,IAAI,CAACA,WAAW,CAACI,IAAI,CAAC,GAAGJ,WAAW,CAAC;IACrC,IAAI,CAACK,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACN,WAAW,CAACC,KAAK,EAAE,CAAC;EAE1D","names":["EventEmitter","Ingredient","ShoppingListService","constructor","getIngredients","ingredients","slice","addIngredient","ingredient","push","ingredientsChanged","emit","addIngredients"],"sourceRoot":"","sources":["/Users/ewelinakucharczyk/PrivateWork/angular-basics/src/app/shopping-list/shopping-list.service.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { Ingredient } from \"src/shared/ingredient.model\";\n\nexport class ShoppingListService {\n    ingredientsChanged = new EventEmitter<Ingredient[]>();\n    private ingredients: Ingredient[] = [\n        new Ingredient('Apples', 5),\n        new Ingredient('Bananas', 3), \n      ];\n\n    getIngredients() {\n        // we return copy of array \n        return this.ingredients.slice()\n    }\n\n    addIngredient(ingredient: Ingredient) {\n        this.ingredients.push(ingredient);\n        //we have to emitt event that data is changed \n        this.ingredientsChanged.emit(this.ingredients.slice());\n    }\n\n    addIngredients(ingredients: Ingredient[]) {\n        this.ingredients.push(...ingredients);\n        this.ingredientsChanged.emit(this.ingredients.slice());\n\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}